package main

import (
	"fmt"
	"time"
)

type Bucket struct {
	Name string
	Concepts map[string]Concept
}

type Concept struct {
	Title string
	Body  string
	Date  int64
}

func (c Concept) String() string {
	return fmt.Sprintf(
		"Title: %s\nBody: %s\nDate: %d",
		c.Title, c.Body, c.Date,
	)
}

func main() {
	ar := Archive("./test")

	test := Concept{
		Title: "Sas Mike",
		Body:  "Concept di prova...",
		Date:  time.Now().Unix(),
	}

	err := ar.Put("fif", test)
	if err != nil {
		fmt.Println("PUT ERROR", err)
		return
	}

	ar.Put("sos", test)

	_, err = ar.Get("fif")
	if err != nil {
		fmt.Println("GET ERROR", err)
		return
	}

	ch, err := ar.Keys()
	if err != nil {
		fmt.Println(err)
		return
	}

	for bk := range ch {
		fmt.Println(string(bk))
	}
}
